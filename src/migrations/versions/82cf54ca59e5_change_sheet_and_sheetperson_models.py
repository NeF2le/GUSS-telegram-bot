"""Change Sheet and SheetPerson models

Revision ID: 82cf54ca59e5
Revises: ebce757ff84c
Create Date: 2024-09-18 16:33:32.512658

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "82cf54ca59e5"
down_revision: Union[str, None] = "ebce757ff84c"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "event_registration_tables",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("table_url", sa.Integer(), nullable=False),
        sa.Column(
            "event_type",
            sa.Enum(
                "PRO_WEEKEND",
                "COMMITTEE_EVENT_GUSS",
                "COMMITTEE_EVENT_CITY",
                "SOVIET_EVENT",
                "OON_EVENT",
                "PO_EVENT",
                name="eventtype",
            ),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("table_url"),
    )
    op.create_index(
        op.f("ix_event_registration_tables_id"),
        "event_registration_tables",
        ["id"],
        unique=False,
    )
    op.create_table(
        "event_registration_table_persons",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("full_name", sa.String(), nullable=False),
        sa.Column("matched_person_id", sa.Integer(), nullable=True),
        sa.Column("points_added", sa.Boolean(), nullable=False),
        sa.Column("table_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["matched_person_id"], ["persons.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["table_id"], ["event_registration_tables.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "full_name", "table_id", name="_full_name_table_uc"
        ),
        sa.UniqueConstraint(
            "table_id", "matched_person_id", name="_table_matched_person_uc"
        ),
    )
    op.create_index(
        op.f("ix_event_registration_table_persons_id"),
        "event_registration_table_persons",
        ["id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_event_registration_table_persons_table_id"),
        "event_registration_table_persons",
        ["table_id"],
        unique=False,
    )
    op.drop_index("ix_sheet_persons_id", table_name="sheet_persons")
    op.drop_index("ix_sheet_persons_sheet_id", table_name="sheet_persons")
    op.drop_table("sheet_persons")
    op.drop_index("ix_sheets_id", table_name="sheets")
    op.drop_table("sheets")

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "sheet_persons",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "first_name", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "last_name", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "matched_person_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "points_added", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "sheet_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["matched_person_id"],
            ["persons.id"],
            name="sheet_persons_matched_person_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["sheet_id"],
            ["sheets.id"],
            name="sheet_persons_sheet_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="sheet_persons_pkey"),
        sa.UniqueConstraint(
            "first_name", "last_name", "sheet_id", name="_first_last_sheet_uc"
        ),
        sa.UniqueConstraint(
            "sheet_id", "matched_person_id", name="_sheet_matched_person_uc"
        ),
    )
    op.create_index(
        "ix_sheet_persons_sheet_id",
        "sheet_persons",
        ["sheet_id"],
        unique=False,
    )
    op.create_index(
        "ix_sheet_persons_id", "sheet_persons", ["id"], unique=False
    )
    op.create_table(
        "sheets",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("title", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "table_url", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.PrimaryKeyConstraint("id", name="sheets_pkey"),
        sa.UniqueConstraint("table_url", name="sheets_table_url_key"),
    )
    op.create_index("ix_sheets_id", "sheets", ["id"], unique=False)
    op.drop_index(
        op.f("ix_event_registration_table_persons_table_id"),
        table_name="event_registration_table_persons",
    )
    op.drop_index(
        op.f("ix_event_registration_table_persons_id"),
        table_name="event_registration_table_persons",
    )
    op.drop_table("event_registration_table_persons")
    op.drop_index(
        op.f("ix_event_registration_tables_id"),
        table_name="event_registration_tables",
    )
    op.drop_table("event_registration_tables")
    # ### end Alembic commands ###
