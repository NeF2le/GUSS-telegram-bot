"""init migration

Revision ID: 5019b9dcd585
Revises: 
Create Date: 2024-09-30 21:30:37.953862

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "5019b9dcd585"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "categories",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(
        op.f("ix_categories_id"), "categories", ["id"], unique=False
    )
    op.create_table(
        "committees",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("talisman", sa.Text(), nullable=False),
        sa.Column("protocols_document_id", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
        sa.UniqueConstraint("protocols_document_id"),
        sa.UniqueConstraint("talisman"),
    )
    op.create_index(
        op.f("ix_committees_id"), "committees", ["id"], unique=False
    )
    op.create_table(
        "event_types",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("points", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(
        op.f("ix_event_types_id"), "event_types", ["id"], unique=False
    )
    op.create_table(
        "persons",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("first_name", sa.String(), nullable=False),
        sa.Column("last_name", sa.String(), nullable=False),
        sa.Column("vk_id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("vk_id"),
    )
    op.create_index(op.f("ix_persons_id"), "persons", ["id"], unique=False)
    op.create_table(
        "audit_logs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "action_type",
            sa.Enum(
                "INSERT_PERSON",
                "DELETE_PERSON",
                "INSERT_MEMBERSHIP",
                "UPDATE_MEMBERSHIP",
                "DELETE_MEMBERSHIP",
                "UPDATE_PERSON_POINTS",
                "UPDATE_PERSON_FIRST_NAME",
                "UPDATE_PERSON_LAST_NAME",
                name="actiontype",
            ),
            nullable=False,
        ),
        sa.Column("person_id", sa.Integer(), nullable=True),
        sa.Column("old_data", sa.JSON(), nullable=True),
        sa.Column("new_data", sa.JSON(), nullable=True),
        sa.Column("comment", sa.Text(), nullable=True),
        sa.Column(
            "changed_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("changed_by", sa.String(length=100), nullable=False),
        sa.ForeignKeyConstraint(
            ["person_id"], ["persons.id"], ondelete="SET NULL"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_audit_logs_id"), "audit_logs", ["id"], unique=False
    )
    op.create_table(
        "event_registration_tables",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("table_url", sa.String(), nullable=False),
        sa.Column("event_type_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["event_type_id"], ["event_types.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("table_url"),
    )
    op.create_index(
        op.f("ix_event_registration_tables_id"),
        "event_registration_tables",
        ["id"],
        unique=False,
    )
    op.create_table(
        "memberships",
        sa.Column("person_id", sa.Integer(), nullable=False),
        sa.Column("committee_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["committee_id"], ["committees.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["person_id"], ["persons.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("person_id", "committee_id"),
    )
    op.create_table(
        "person_points",
        sa.Column("person_id", sa.Integer(), nullable=False),
        sa.Column("category_id", sa.Integer(), nullable=False),
        sa.Column("points_value", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["category_id"], ["categories.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["person_id"], ["persons.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("person_id", "category_id"),
    )
    op.create_table(
        "protocols",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("number", sa.Integer(), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("committee_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["committee_id"], ["committees.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "number", "date", "committee_id", name="_number_date_committee_uc"
        ),
    )
    op.create_index(op.f("ix_protocols_id"), "protocols", ["id"], unique=False)
    op.create_table(
        "vk_activities",
        sa.Column("person_id", sa.Integer(), nullable=False),
        sa.Column("post_url", sa.String(), nullable=False),
        sa.Column(
            "activity_type",
            sa.Enum("VK_LIKE", "VK_COMMENT", name="activitytype"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["person_id"], ["persons.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("person_id", "post_url", "activity_type"),
        sa.UniqueConstraint(
            "person_id",
            "post_url",
            "activity_type",
            name="_person_post_activity_uc",
        ),
    )
    op.create_table(
        "event_registration_table_persons",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("full_name", sa.String(), nullable=False),
        sa.Column("matched_person_id", sa.Integer(), nullable=True),
        sa.Column("points_added", sa.Boolean(), nullable=False),
        sa.Column("table_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["matched_person_id"], ["persons.id"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(
            ["table_id"], ["event_registration_tables.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "full_name", "table_id", name="_full_name_table_uc"
        ),
    )
    op.create_index(
        op.f("ix_event_registration_table_persons_id"),
        "event_registration_table_persons",
        ["id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_event_registration_table_persons_table_id"),
        "event_registration_table_persons",
        ["table_id"],
        unique=False,
    )
    op.create_table(
        "protocol_persons",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("full_name", sa.String(), nullable=False),
        sa.Column("matched_person_id", sa.Integer(), nullable=True),
        sa.Column("points_added", sa.Boolean(), nullable=False),
        sa.Column("protocol_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["matched_person_id"], ["persons.id"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(
            ["protocol_id"], ["protocols.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "full_name", "protocol_id", name="_first_last_protocol_uc"
        ),
    )
    op.create_index(
        op.f("ix_protocol_persons_id"),
        "protocol_persons",
        ["id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_protocol_persons_protocol_id"),
        "protocol_persons",
        ["protocol_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_protocol_persons_protocol_id"), table_name="protocol_persons"
    )
    op.drop_index(
        op.f("ix_protocol_persons_id"), table_name="protocol_persons"
    )
    op.drop_table("protocol_persons")
    op.drop_index(
        op.f("ix_event_registration_table_persons_table_id"),
        table_name="event_registration_table_persons",
    )
    op.drop_index(
        op.f("ix_event_registration_table_persons_id"),
        table_name="event_registration_table_persons",
    )
    op.drop_table("event_registration_table_persons")
    op.drop_table("vk_activities")
    op.drop_index(op.f("ix_protocols_id"), table_name="protocols")
    op.drop_table("protocols")
    op.drop_table("person_points")
    op.drop_table("memberships")
    op.drop_index(
        op.f("ix_event_registration_tables_id"),
        table_name="event_registration_tables",
    )
    op.drop_table("event_registration_tables")
    op.drop_index(op.f("ix_audit_logs_id"), table_name="audit_logs")
    op.drop_table("audit_logs")
    op.drop_index(op.f("ix_persons_id"), table_name="persons")
    op.drop_table("persons")
    op.drop_index(op.f("ix_event_types_id"), table_name="event_types")
    op.drop_table("event_types")
    op.drop_index(op.f("ix_committees_id"), table_name="committees")
    op.drop_table("committees")
    op.drop_index(op.f("ix_categories_id"), table_name="categories")
    op.drop_table("categories")
    # ### end Alembic commands ###
